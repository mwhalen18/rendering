mich$geometry[[1]][[i]] = NULL
}
}
seq_along(mich$geometry[[1]])
# Michigan ----------------------------------------------------------------
mich = kluane[kluane$NAME_1 == "Alaska",]
dat = mich$geometry[[1]]
dat = mich$geometry[[1]][[1]][[1]]
min(dat[,1])
min(dat[,1]) < -170
mich$geometry[[1]][[1]] = NULL
# Michigan ----------------------------------------------------------------
mich = kluane[kluane$NAME_1 == "Alaska",]
mich = bind_rows(mich, ont)
for (i in 1:seq_along(mich$geometry[[1]])) {
print(i)
dat = mich$geometry[[1]][[i]][[1]]
if (min(dat[,1]) < 170) {
mich$geometry[[1]][[i]] = NULL
}
}
# Michigan ----------------------------------------------------------------
mich = kluane[kluane$NAME_1 == "Alaska",]
mich = bind_rows(mich, ont)
seq_along(mich$geometry[[1]])
# Michigan ----------------------------------------------------------------
mich = kluane[kluane$NAME_1 == "Alaska",]
kluane = readRDS(url("https://biogeo.ucdavis.edu/data/gadm3.6/Rsf/gadm36_USA_1_sf.rds"))
canada = readRDS(url("https://biogeo.ucdavis.edu/data/gadm3.6/Rsf/gadm36_CAN_1_sf.rds"))
canada %>%
tibble() %>%
filter(NAME_1 == "Ontario")
ont = canada[canada$NAME_1 == "Yukon",]
# Michigan ----------------------------------------------------------------
mich = kluane[kluane$NAME_1 == "Alaska",]
mich = bind_rows(mich, ont)
mich
seq_along(mich$geometry[[1]])
for (i in 1:seq_along(mich$geometry[[1]])) {
print(i)
dat = mich$geometry[[1]][[i]][[1]]
if (min(dat[,1]) < -170) {
mich$geometry[[1]][[i]] = NULL
}
}
seq_along(mich$geometry[[1]])
1:seq_along(mich$geometry[[1]])
for (i in seq_along(mich$geometry[[1]])) {
print(i)
dat = mich$geometry[[1]][[i]][[1]]
if (min(dat[,1]) < -170) {
mich$geometry[[1]][[i]] = NULL
}
}
View(mich$geometry)
# Michigan ----------------------------------------------------------------
mich = kluane[kluane$NAME_1 == "Alaska",]
mich = bind_rows(mich, ont)
for (i in seq_along(mich$geometry[[1]])) {
print(i)
dat = mich$geometry[[1]][[i]][[1]]
if (min(dat[,1]) < -170) {
mich$geometry[[1]][[i]] = NULL
} else {
print("passing")
}
}
for (i in seq_along(mich$geometry[[1]])) {
print(i)
dat = mich$geometry[[1]][[i]][[1]]
print(dat)
if (min(dat[,1]) < -170) {
mich$geometry[[1]][[i]] = NULL
} else {
print("passing")
}
Sys.sleep(0.5)
}
mich = bind_rows(mich, ont)
for (i in seq_along(mich$geometry[[1]])) {
dat = mich$geometry[[1]][[i]][[1]][,1]
print(dat)
if (min(dat[,1]) < -170) {
mich$geometry[[1]][[i]] = NULL
} else {
print("passing")
}
Sys.sleep(1)
}
for (i in seq_along(mich$geometry[[1]])) {
dat = mich$geometry[[1]][[i]][[1]]
print(dat[,1])
}
for (i in seq_along(mich$geometry[[1]])) {
dat = mich$geometry[[1]][[i]][[1]]
print(min(dat[,1]))
}
for (i in seq_along(mich$geometry[[1]])) {
dat = mich$geometry[[1]][[i]][[1]]
x = min(dat[,1])
if (x < -170) {
print("Scrap")
}
}
mich = bind_rows(mich, ont)
empty = function(x) {
dat = x[[1]]
}
for (i in seq_along(mich$geometry[[1]])) {
dat = mich$geometry[[1]][[i]][[1]]
x = min(dat[,1])
if (x < -170) {
mich$geometry[[1]][[1]] = NULL
}
}
for (i in seq_along(mich$geometry[[1]])) {
dat = mich$geometry[[1]][[i]][[1]]
x = min(dat[,1])
if (x < -170) {
mich$geometry[[1]][[i]] = NULL
}
}
mat = matrix(1:5, ncol = 2)
mat = matrix(1:10, ncol = 2)
mat
mat = matrix(1:10, ncol = 2, dimnames = x("x", "y"))
mat = matrix(1:10, ncol = 2, dimnames = c("x", "y"))
mat = matrix(1:10, ncol = 2, dimnames = list("x", "y"))
mat = matrix(1:10, ncol = 2)
colnames(mat) = c("x", "y")
mat["x" > 3,]
mat[mat$x > 3,]
mat[mat["x"] > 3,]
mat[mat[,1] > 3]
mat[mat[,1] > 3,]
lapply(mich$geometry[[1]], function(x) x[x[,1] > 3,])
list(mat, mat, mat)
mich$geometry[[1]]
View(mich$geometry[[1])
View(mich$geometry[[1]])
list(list(mat), list(mat), list(mat))
matty = list(list(mat), list(mat), list(mat))
View(matty)
lapply(mich$geometry[[1]], function(x) x[[1]][x[[1]][,1] > 3,])
lapply(mich$geometry[[1]], function(x) x[[1]][x[[1]][,1] >= -170,])
mich$geometry[[1]] = lapply(mich$geometry[[1]], function(x) x[[1]][x[[1]][,1] >= -170,])
View(mich$geometry)
# Michigan ----------------------------------------------------------------
mich = kluane[kluane$NAME_1 == "Alaska",]
mich = bind_rows(mich, ont)
View(mich$geometry)
mich$geometry[[1]] = lapply(mich$geometry[[1]], function(x) x[[1]][x[[1]][,1] >= -170,])
View(mich$geometry)
# Michigan ----------------------------------------------------------------
mich = kluane[kluane$NAME_1 == "Alaska",]
mich = bind_rows(mich, ont)
mich$geometry[[1]]
View(mich$geometry[[1]])
mich$geometry[[1]][[1]][[1]]
lapply(mich$geometry[[1]], function(x) x[x[,1] > 3,])
myfunc = function(x) {
x = x[[1]]
return(list(x[x[,1] > -170,]))
}
myfunc(mich$geometry[[1]][[1]])
purrr::map(mich$geometry[[1]], myfunc)
View(mich$geometry)
mich$geometry[[1]] = purrr::map(mich$geometry[[1]], myfunc)
View(mich$geometry)
elev = get_elev_raster(mich, z = 3)
mich$geometry[[1]]
mich$geometry[[1]][[1]]
mich$geometry[[1]][[900]]
mich$geometry[[1]][[900]] %>%
st_as_sf(coords = c("x", "y"))
mich$geometry[[1]][[900]][[1]] %>%
st_as_sf(coords = c("x", "y"))
mich$geometry[[1]][[900]][[1]] %>%
tibble() %>%
st_as_sf(coords = c("x", "y"))
mich$geometry[[1]][[900]][[1]]
mich$geometry[[1]][[900]][[1]] %>%
tibble()
x = mich$geometry[[1]][[900]][[1]] %>%
tibble()
x = mich$geometry[[1]][[900]][[1]] %>%
tibble()
colnames(x) = c("x", "y")
x
?tibble
x = mich$geometry[[1]][[900]][[1]] %>%
as_tibble()
x
x = mich$geometry[[1]][[900]][[1]] %>%
as_tibble() %>%
st_as_sf(coords = c("x", "y"))
x
mich$geometry[[2]][[1]]
mich$geometry[[2]]
mich[[1]]
mich$geometry
mich$geometry[[1]]
# Michigan ----------------------------------------------------------------
mich = kluane[kluane$NAME_1 == "Alaska",]
mich = bind_rows(mich, ont)
# Michigan ----------------------------------------------------------------
mich = kluane[kluane$NAME_1 == "Alaska",] %>%
as_tibble()
mich
t <- structure(list(structure(list(structure(c(-89.990791, -89.990772,
-89.990901, -89.99092, -89.990791, 30.727025, 30.727083, 30.727114,
30.727057, 30.727025), .Dim = c(5L, 2L))), class = c("XY", "POLYGON",
"sfg")), structure(list(structure(c(-89.991691, -89.991755, -89.991755,
-89.991691, -89.991691, 30.716004, 30.716004, 30.715916, 30.715916,
30.716004), .Dim = c(5L, 2L))), class = c("XY", "POLYGON", "sfg"
))), class = c("sfc_POLYGON", "sfc"), precision = 0, bbox = structure(c(xmin = -89.991755,
ymin = 30.715916, xmax = -89.990772, ymax = 30.727114), class = "bbox"), crs = structure(list(
epsg = 4326L, proj4string = "+proj=longlat +datum=WGS84 +no_defs"), class = "crs"), n_empty = 0L)
t
t %>% as_tibble()
t %>% as_tibble() %>% group_by(L2)
st_coordinates(t)
st_coordinates(mich$geometry[[2]])
st_coordinates(mich$geometry)
st_coordinates(mich$geometry[[1]])
mich = kluane[kluane$NAME_1 == "Alaska",]
st_coordinates(mich)
st_coordinates(mich) %>%
group_by(L2) %>%
mutate(max_y = y < -170)
st_coordinates(mich) %>%
as_tibble() %>%
group_by(L2) %>%
mutate(max_y = y < -170)
st_coordinates(mich) %>%
as_tibble() %>%
group_by(L2) %>%
mutate(max_y = Y < -170)
st_coordinates(mich) %>%
as_tibble() %>%
group_by(L2) %>%
mutate(max_y = Y < -170) %>%
distinct(L2, max_y)
good_polys = st_coordinates(mich) %>%
as_tibble() %>%
group_by(L2) %>%
mutate(max_y = Y < -170) %>%
distinct(L2, max_y)
mich[good_polys$max_y]
alaska = kluane[kluane$NAME_1 == "Alaska",] %>%
as_tibble()
alaska = usa[usa$NAME_1 == "Alaska",] %>%
as_tibble()
good_poly = st_coordinates(alaska) %>%
as_tibble() %>%
group_by(L2) %>%
mutate(min_y = Y < -170) %>%
distinct(L2, max_y)
alaska = alaska[good_poly$min_y]
usa = readRDS(url("https://biogeo.ucdavis.edu/data/gadm3.6/Rsf/gadm36_USA_1_sf.rds"))
canada = readRDS(url("https://biogeo.ucdavis.edu/data/gadm3.6/Rsf/gadm36_CAN_1_sf.rds"))
yukon = canada[canada$NAME_1 == "Yukon",]
alaska = usa[usa$NAME_1 == "Alaska",] %>%
as_tibble()
good_poly = st_coordinates(alaska) %>%
as_tibble() %>%
group_by(L2) %>%
mutate(min_y = Y < -170) %>%
distinct(L2, max_y)
alaska = usa[usa$NAME_1 == "Alaska",]
good_poly = st_coordinates(alaska) %>%
as_tibble() %>%
group_by(L2) %>%
mutate(min_y = Y < -170) %>%
distinct(L2, max_y)
good_poly = st_coordinates(alaska) %>%
as_tibble() %>%
group_by(L2) %>%
mutate(min_y = Y < -170) %>%
distinct(L2, min_y)
alaska = alaska[good_poly$min_y]
alaska = bind_rows(alaska, yukon)
alaska = bind_rows(alaska, yukon)
elev = get_elev_raster(alaska, z = 6)
elev = get_elev_raster(alaska, z = 3)
elmat = raster_to_matrix(elev) %>%
resize_matrix(scale = 0.25)
texture = (grDevices::colorRampPalette(c("#000000", "#78c864", "#D9CC9A", "#d8d3bc", "#ffffff", "#78c864")))(256)
elmat %>%
height_shade() %>%
add_shadow(texture_shade(elmat, detail = 1/3, contrast = 6, brightness = 3.5), 0) %>%
add_shadow(lamb_shade(elmat, zscale = 50),0) %>%
#texture_shade(contrast = 5, brightness = 5) %>%
#sphere_shade(texture = , sunangle = 180) %>%
#add_water(detect_water(elmat, cutoff = 0.998, zscale = 10)) %>%
plot_3d(elmat, windowsize = c(1500,1500),
zscale = 10, zoom = 0.75, phi = 89, theta = 0, fov = 0, background = "white")
alaska = usa[usa$NAME_1 == "Alaska",]
good_poly = st_coordinates(alaska) %>%
as_tibble() %>%
group_by(L2) %>%
mutate(min_y = Y < -170) %>%
distinct(L2, min_y)
good_poly
st_coordinates(alaska) %>%
as_tibble()
good_poly = st_coordinates(alaska) %>%
as_tibble() %>%
group_by(L2) %>%
mutate(min_x = X < -170) %>%
distinct(L2, min_x)
alaska = alaska[good_poly$min_y]
alaska = alaska[good_poly$min_x]
alaska = usa[usa$NAME_1 == "Alaska",]
good_poly = st_coordinates(alaska) %>%
as_tibble() %>%
group_by(L2) %>%
mutate(min_x = X < -170) %>%
distinct(L2, min_x)
good_poly
alaska = alaska[good_poly$min_x]
alaska = usa[usa$NAME_1 == "Alaska",]
good_poly = st_coordinates(alaska) %>%
as_tibble() %>%
group_by(L2) %>%
mutate(min_x = X < -170) %>%
distinct(L2, min_x)
good_poly$min_x
nrow(good_poly)
nrow(alaska)
length(alaska)
alaska = usa[usa$NAME_1 == "Alaska",]
good_poly = st_coordinates(alaska) %>%
as_tibble() %>%
group_by(L2) %>%
mutate(min_x = X < -170) %>%
distinct(L2, min_x)
alaska = alaska[good_poly$min_x]
good_poly = st_coordinates(alaska) %>%
as_tibble() %>%
group_by(L2) %>%
mutate(min_x = X < -170,
min_Y = Y < -170) %>%
distinct(L2, min_x)
nrow(good_poly)
alaska = alaska[good_poly$min_y]
good_poly = st_coordinates(alaska) %>%
as_tibble() %>%
group_by(L2) %>%
mutate(min_x = X < -170,
min_y = Y < -170) %>%
distinct(L2, min_x)
alaska = alaska[good_poly$min_y]
alaska
good_poly = st_coordinates(alaska) %>%
as_tibble() %>%
group_by(L2) %>%
mutate(min_x = X < -170,
min_y = Y < -170) %>%
distinct(L2, min_x)
good_poly
good_poly = st_coordinates(alaska) %>%
as_tibble() %>%
group_by(L2) %>%
mutate(min_x = X < -170,
min_y = Y < -170) %>%
distinct(L2, min_y)
alaska = alaska[good_poly$min_y]
nrow(good_poly)
alaska = alaska[good_poly$min_x]
alaska$geometry
good_poly = st_coordinates(alaska) %>%
as_tibble() %>%
group_by(L2) %>%
mutate(min_x = X < -170,
min_y = Y < -170) %>%
distinct(L2, min_x)
good_poly$min_x
alaska = alaska[good_poly$min_x]
which(good_poly$min_x)
alaska = alaska[which(good_poly$min_x)]
good_poly = st_coordinates(alaska) %>%
as_tibble() %>%
group_by(L2) %>%
mutate(min_x = X < -170,
min_y = Y < -170) %>%
distinct(L2, min_y)
which(good_poly$min_y)
good_poly
good_poly = st_coordinates(alaska) %>%
as_tibble() %>%
group_by(L2) %>%
mutate(min_x = X > -170,
min_y = Y < -170) %>%
distinct(L2, min_y)
good_poly = st_coordinates(alaska) %>%
as_tibble() %>%
group_by(L2) %>%
mutate(min_x = X > -170,
min_y = Y < -170) %>%
distinct(L2, min_x)
alaska = alaska[which(good_poly$min_x)]
which(good_poly$min_x)
good_poly = st_coordinates(alaska) %>%
as_tibble() %>%
group_by(L2) %>%
mutate(min_x = X > -170,
min_y = Y > -170) %>%
distinct(L2, min_y)
alaska = alaska[which(good_poly$min_y)]
alaska = alaska[which(good_poly$min_y), ]
alaska = alaska[which(good_poly$min_x), ]
good_poly = st_coordinates(alaska) %>%
as_tibble() %>%
group_by(L2) %>%
mutate(min_x = X > -170,
min_y = Y > -170) %>%
distinct(L2, min_x)
alaska = alaska[which(good_poly$min_x), ]
good_poly = st_coordinates(alaska) %>%
as_tibble() %>%
group_by(L2) %>%
mutate(min_x = X > -170,
min_y = Y > -170) %>%
distinct(L2, min_x)
good_poly = st_coordinates(alaska) %>%
as_tibble() %>%
group_by(L2) %>%
mutate(min_x = X > -170) %>%
distinct(L2, min_x)
st_coordinates(alaska) %>%
as_tibble() %>%
group_by(L2) %>%
mutate(min_x = X > -170)
alaska = usa[usa$NAME_1 == "Alaska",]
good_poly = st_coordinates(alaska) %>%
as_tibble() %>%
group_by(L2) %>%
mutate(min_x = X > -170) %>%
distinct(L2, min_x)
alaska = alaska[which(good_poly$min_x), ]
alaska
alaska[which(good_poly$min_x)]
View(alaska)
alaska = usa[usa$NAME_1 == "Alaska",]
good_poly = st_coordinates(alaska) %>%
as_tibble() %>%
group_by(L2) %>%
mutate(min_x = X > -170) %>%
distinct(L2, min_x)
alaska[good_poly$min_x, ]
good_poly$min_x
good_poly = st_coordinates(alaska) %>%
as_tibble() %>%
group_by(L2) %>%
mutate(min_x = X > -170) %>%
distinct(L2, min_x) %>%
row_number()
good_poly
st_coordinates(alaska) %>%
as_tibble() %>%
group_by(L2) %>%
mutate(min_x = X > -170) %>%
distinct(L2, min_x)
good_poly = st_coordinates(alaska) %>%
as_tibble() %>%
group_by(L2) %>%
mutate(min_x = X > -170) %>%
distinct(L2, min_x) %>%
which()
good_poly = st_coordinates(alaska) %>%
as_tibble() %>%
group_by(L2) %>%
mutate(min_x = X > -170) %>%
distinct(L2, min_x) %>%
which(min_x)
good_poly = st_coordinates(alaska) %>%
as_tibble() %>%
group_by(L2) %>%
mutate(min_x = X > -170) %>%
distinct(L2, min_x) %>%
which(.$min_x)
good_poly = st_coordinates(alaska) %>%
as_tibble() %>%
group_by(L2) %>%
mutate(min_x = X > -170) %>%
distinct(L2, min_x)
alaska
usa = readRDS(url("https://biogeo.ucdavis.edu/data/gadm3.6/Rsf/gadm36_USA_2_sf.rds"))
alaska = usa[usa$NAME_1 == "Alaska",]
alaska
View(alaska)
gc()
alaska = usa[usa$NAME_1 == "Alaska",]
usa = readRDS(url("https://biogeo.ucdavis.edu/data/gadm3.6/Rsf/gadm36_USA_2_sf.rds"))
alaska = usa[usa$NAME_1 == "Alaska",]
st_coordinates(alaska) %>%
as_tibble()
?st_coordinates
st_coordinates(alaska) %>%
as_tibble() %>%
group_by(L2) %>%
mutate(min_x = X > -170) %>%
distinct(L2, min_x)
good_poly = st_coordinates(alaska) %>%
as_tibble() %>%
group_by(L2) %>%
mutate(min_x = X > -170) %>%
distinct(L2, min_x)
alaska[good_poly$min_x]
nrow(alaska)
View(alaska %>% as_tibble())
